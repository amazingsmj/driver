---
- name: Create static files directory
  file:
    path: "{{ root_static_dir }}"
    owner: "{{ driver_user }}"
    group: "{{ driver_user }}"
    mode: '0775'
    state: directory

- name: Create media files directory
  file:
    path: "{{ root_media_dir }}"
    owner: "{{ driver_user }}"
    group: "{{ driver_user }}"
    mode: '0775'
    state: directory

- name: Build application Docker image
  command: >
    docker build
      -f {{ root_app_dir }}/Dockerfile.base
      -t {{ docker_repository }}driver-app:{{ docker_image_tag }}
      {{ root_app_dir }}
  when: developing

- name: Build application Docker image (dev tools)
  command: >
    docker build
      -f {{ root_app_dir }}/Dockerfile.development
      -t {{ docker_repository }}driver-app:{{ docker_image_tag }}
      {{ root_app_dir }}
  when: developing

- name: Pull application Docker image
  command: /usr/bin/docker pull {{ docker_repository }}driver-app:{{ docker_image_tag }}
  when: staging or production

- name: Ensure /etc/init directory exists
  file:
    path: /etc/init
    state: directory
    mode: '0755'
  when: ansible_service_mgr == 'upstart'

- name: Configure DRIVER application service definition (Upstart)
  template:
    src: upstart-app.conf.j2
    dest: /etc/init/driver-app.conf
  when: ansible_service_mgr == 'upstart'

- name: Configure DRIVER application service definition (systemd)
  template:
    src: driver-app.service.j2
    dest: /etc/systemd/system/driver-app.service
  when: ansible_service_mgr == 'systemd'

- name: Reload systemd
  command: systemctl daemon-reload
  when: ansible_service_mgr == 'systemd'

- name: Restart DRIVER application (Upstart)
  service:
    name: driver-app
    state: restarted
  when: ansible_service_mgr == 'upstart'

- name: Restart DRIVER application (systemd)
  service:
    name: driver-app
    state: restarted
  when: ansible_service_mgr == 'systemd'

- name: Set up monit monitoring of driver-app container
  template:
    src: monit-driver-app.cfg.j2
    dest: /etc/monit/conf.d/driver-app.cfg
  notify:
    - Restart monit

- name: Run Django collectstatic
  command: >
    /usr/bin/docker exec -i driver-app ./manage.py collectstatic --noinput

- name: Run Django migrations
  command: >
    /usr/bin/docker exec -i driver-app ./manage.py migrate

- import_tasks: firewall.yml
